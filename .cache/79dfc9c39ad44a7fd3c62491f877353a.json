{"dependencies":[{"name":"/Users/LYC/Desktop/tf/TryIt/.babelrc","includedInParent":true,"mtime":1539397829000},{"name":"/Users/LYC/Desktop/tf/TryIt/package.json","includedInParent":true,"mtime":1539397829000},{"name":"@tensorflow-models/posenet","loc":{"line":1,"column":25}}],"generated":{"js":"'use strict';\n\nvar _posenet = require('@tensorflow-models/posenet');\n\nvar posenet = _interopRequireWildcard(_posenet);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nconst imageScaleFactor = 0.5;\nconst outputStride = 16;\nconst flipHorizontal = false;\n\nasync function estimatePoseOnImage(imageElement) {\n    // load the posenet model from a checkpoint\n    const net = await posenet.load();\n\n    const pose = await net.estimateSinglePose(imageElement, imageScaleFactor, flipHorizontal, outputStride);\n\n    return pose;\n}\n\nconst imageElement = document.getElementById('demo_pic');\n\nconst pose = estimatePoseOnImage(imageElement);\n\nconsole.log(pose);","map":{"mappings":[{"generated":{"line":3,"column":0},"source":"js/test.js","original":{"line":1,"column":0}},{"name":"posenet","generated":{"line":5,"column":4},"source":"js/test.js","original":{"line":1,"column":12}},{"generated":{"line":9,"column":0},"source":"js/test.js","original":{"line":2,"column":0}},{"name":"imageScaleFactor","generated":{"line":9,"column":6},"source":"js/test.js","original":{"line":2,"column":6}},{"generated":{"line":9,"column":25},"source":"js/test.js","original":{"line":2,"column":25}},{"generated":{"line":9,"column":28},"source":"js/test.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":0},"source":"js/test.js","original":{"line":3,"column":0}},{"name":"outputStride","generated":{"line":10,"column":6},"source":"js/test.js","original":{"line":3,"column":6}},{"generated":{"line":10,"column":21},"source":"js/test.js","original":{"line":3,"column":21}},{"generated":{"line":10,"column":23},"source":"js/test.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":0},"source":"js/test.js","original":{"line":4,"column":0}},{"name":"flipHorizontal","generated":{"line":11,"column":6},"source":"js/test.js","original":{"line":4,"column":6}},{"generated":{"line":11,"column":23},"source":"js/test.js","original":{"line":4,"column":23}},{"generated":{"line":11,"column":28},"source":"js/test.js","original":{"line":4,"column":0}},{"generated":{"line":13,"column":0},"source":"js/test.js","original":{"line":6,"column":0}},{"name":"estimatePoseOnImage","generated":{"line":13,"column":15},"source":"js/test.js","original":{"line":6,"column":15}},{"generated":{"line":13,"column":34},"source":"js/test.js","original":{"line":6,"column":0}},{"name":"imageElement","generated":{"line":13,"column":35},"source":"js/test.js","original":{"line":6,"column":35}},{"generated":{"line":13,"column":47},"source":"js/test.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":49},"source":"js/test.js","original":{"line":6,"column":49}},{"generated":{"line":14,"column":0},"source":"js/test.js","original":{"line":7,"column":4}},{"generated":{"line":15,"column":0},"source":"js/test.js","original":{"line":8,"column":4}},{"name":"net","generated":{"line":15,"column":10},"source":"js/test.js","original":{"line":8,"column":10}},{"generated":{"line":15,"column":16},"source":"js/test.js","original":{"line":8,"column":16}},{"name":"posenet","generated":{"line":15,"column":22},"source":"js/test.js","original":{"line":8,"column":22}},{"name":"load","generated":{"line":15,"column":30},"source":"js/test.js","original":{"line":8,"column":30}},{"generated":{"line":15,"column":34},"source":"js/test.js","original":{"line":8,"column":22}},{"generated":{"line":15,"column":36},"source":"js/test.js","original":{"line":8,"column":4}},{"generated":{"line":17,"column":0},"source":"js/test.js","original":{"line":10,"column":4}},{"name":"pose","generated":{"line":17,"column":10},"source":"js/test.js","original":{"line":10,"column":10}},{"generated":{"line":17,"column":17},"source":"js/test.js","original":{"line":10,"column":17}},{"name":"net","generated":{"line":17,"column":23},"source":"js/test.js","original":{"line":10,"column":23}},{"name":"estimateSinglePose","generated":{"line":17,"column":27},"source":"js/test.js","original":{"line":10,"column":27}},{"generated":{"line":17,"column":45},"source":"js/test.js","original":{"line":10,"column":23}},{"name":"imageElement","generated":{"line":17,"column":46},"source":"js/test.js","original":{"line":10,"column":46}},{"generated":{"line":17,"column":58},"source":"js/test.js","original":{"line":10,"column":23}},{"name":"imageScaleFactor","generated":{"line":17,"column":60},"source":"js/test.js","original":{"line":10,"column":60}},{"generated":{"line":17,"column":76},"source":"js/test.js","original":{"line":10,"column":23}},{"name":"flipHorizontal","generated":{"line":17,"column":78},"source":"js/test.js","original":{"line":10,"column":78}},{"generated":{"line":17,"column":92},"source":"js/test.js","original":{"line":10,"column":23}},{"name":"outputStride","generated":{"line":17,"column":94},"source":"js/test.js","original":{"line":10,"column":94}},{"generated":{"line":17,"column":106},"source":"js/test.js","original":{"line":10,"column":23}},{"generated":{"line":17,"column":107},"source":"js/test.js","original":{"line":10,"column":4}},{"generated":{"line":19,"column":0},"source":"js/test.js","original":{"line":12,"column":4}},{"name":"pose","generated":{"line":19,"column":11},"source":"js/test.js","original":{"line":12,"column":11}},{"generated":{"line":19,"column":15},"source":"js/test.js","original":{"line":12,"column":4}},{"generated":{"line":20,"column":0},"source":"js/test.js","original":{"line":13,"column":1}},{"generated":{"line":22,"column":0},"source":"js/test.js","original":{"line":15,"column":0}},{"name":"imageElement","generated":{"line":22,"column":6},"source":"js/test.js","original":{"line":15,"column":6}},{"name":"document","generated":{"line":22,"column":21},"source":"js/test.js","original":{"line":15,"column":21}},{"name":"getElementById","generated":{"line":22,"column":30},"source":"js/test.js","original":{"line":15,"column":30}},{"generated":{"line":22,"column":44},"source":"js/test.js","original":{"line":15,"column":21}},{"generated":{"line":22,"column":45},"source":"js/test.js","original":{"line":15,"column":45}},{"generated":{"line":22,"column":55},"source":"js/test.js","original":{"line":15,"column":21}},{"generated":{"line":22,"column":56},"source":"js/test.js","original":{"line":15,"column":0}},{"generated":{"line":24,"column":0},"source":"js/test.js","original":{"line":17,"column":0}},{"name":"pose","generated":{"line":24,"column":6},"source":"js/test.js","original":{"line":17,"column":6}},{"name":"estimatePoseOnImage","generated":{"line":24,"column":13},"source":"js/test.js","original":{"line":17,"column":13}},{"name":"imageElement","generated":{"line":24,"column":33},"source":"js/test.js","original":{"line":17,"column":33}},{"generated":{"line":24,"column":45},"source":"js/test.js","original":{"line":17,"column":13}},{"generated":{"line":24,"column":46},"source":"js/test.js","original":{"line":17,"column":0}},{"name":"console","generated":{"line":26,"column":0},"source":"js/test.js","original":{"line":19,"column":0}},{"name":"log","generated":{"line":26,"column":8},"source":"js/test.js","original":{"line":19,"column":8}},{"generated":{"line":26,"column":11},"source":"js/test.js","original":{"line":19,"column":0}},{"name":"pose","generated":{"line":26,"column":12},"source":"js/test.js","original":{"line":19,"column":12}},{"generated":{"line":26,"column":16},"source":"js/test.js","original":{"line":19,"column":0}}],"sources":{"js/test.js":"import * as posenet from '@tensorflow-models/posenet';\nconst imageScaleFactor = 0.5;\nconst outputStride = 16;\nconst flipHorizontal = false;\n\nasync function estimatePoseOnImage(imageElement) {\n    // load the posenet model from a checkpoint\n    const net = await posenet.load();\n\n    const pose = await net.estimateSinglePose(imageElement, imageScaleFactor, flipHorizontal, outputStride);\n\n    return pose;\n}\n\nconst imageElement = document.getElementById('demo_pic');\n\nconst pose = estimatePoseOnImage(imageElement);\n\nconsole.log(pose);"},"lineCount":null}},"hash":"e90f4744e25b234f3fb8e93090352580","cacheData":{"env":{}}}