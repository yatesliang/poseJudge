{"dependencies":[{"name":"/Users/LYC/Desktop/tf/TryIt/package.json","includedInParent":true,"mtime":1539397829000},{"name":"/Users/LYC/Desktop/tf/TryIt/.babelrc","includedInParent":true,"mtime":1539397829000},{"name":"/Users/LYC/Desktop/tf/TryIt/node_modules/browserify-des/package.json","includedInParent":true,"mtime":1540397241677},{"name":"cipher-base","loc":{"line":1,"column":25}},{"name":"des.js","loc":{"line":2,"column":18}},{"name":"inherits","loc":{"line":3,"column":23}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return new Buffer(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return new Buffer(this._des.final())\n}\n"},"hash":"218968aa417ede1207aa82d2ad4ea210","cacheData":{"env":{}}}